Ex 1
By default, Argo CD is only accessible from within the cluster. To expose the UI to users you can utilize any of the standard Kubernetes networking mechanisms such as

Ingress (recommended for production)
Load balancer (affects cloud cost)
NodePort (simple but not very flexible)
For this exercise we will do the simplest way and use a Nodeport service. In a production environment you should use an Ingress.

Ex 2
Expose the Argo CD UI
Feel free to look at the file service.yml in the Editor tab. It is a standard NodePort service resource.

Use the terminal to create it in the cluster:

kubectl apply -f service.yml
After the service is created, check the "Argo CD UI" tab to access the Argo CD Web interface.

Finish
Click Check to finish this challenge when ready.

Argo CD has a flexible user model that also supports SSO with popular identify providers. For this simple example we will use the default admin account.

Ex 3
Log in the Argo CD UI
Argo CD initially has an admin user with an autogenerated password. You can get the admin password from the default Configmap

kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d > admin-pass.txt
Just to make things simple we have disabled authentication in the ArgoCD UI.

Simply use the "ArgoCD UI" tab to look at the interface Everything is empty right now.

Finish
Click Check to finish this challenge when ready.

Ex 4
Apart from the Graphical User interface, Argo CD also comes with a Command Line Interface (CLI) that can be used for common operations.

The CLI is great for administration work, while the GUI is best for inspecting applications and settings.

Argo CD CLI
Step 1
To install the CLI

curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/v2.1.5/argocd-linux-amd64
chmod +x /usr/local/bin/argocd
Step 2
Test that the CLI works by typing

argocd help
Finish
Click Check to finish this challenge when ready.

