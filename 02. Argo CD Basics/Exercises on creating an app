Because GitOps is all about Git, we will use Github for this exercise.

The example application is at https://github.com/codefresh-contrib/gitops-certification-examples/tree/main/simple-app

Objectives
In this track, this is what you'll learn:

How the Argo CD UI works
How the Argo CD CLI works
How to deploy and sync applications

Ex 1

Argo CD User interface
We installed Argo CD for you and you can login in the UI tab.

The UI starts empty because nothing is deployed on our cluster. Click the "New app" button on the top left and fill the following details:

application name : demo
project: default
repository URL: https://github.com/codefresh-contrib/gitops-certification-examples
path: ./simple-app
Cluster: https://kubernetes.default.svc (this is the same cluster where ArgoCD is installed)
Namespace: default
Leave all the other values empty or with default selections. Finally click the Create button. The application entry will appear in the main dashboard. Click on it.

You should see the following.unsynced app

Congratulations! Your have setup your first application with GitOps.

However if you check your cluster with

kubectl get deployments
You will see that nothing is deployed yet. The cluster is still empty. The "Out of sync" message means essentially this

The cluster is empty
The Git repository has an application
Therefore the Git state and the cluster state are different.


Ex 2

Syncing in ArgoCD means matching the state described in Git and what is in the cluster

Syncing an app
We have created our application in Argo CD, but it is still not deployed as it only exists in Git right now. We need to tell Argo CD to make the Git state equal to the cluster state.

Visit the Argo CD UI tab and click on your application to see all the details.Click the "Sync button" and leave all the default options in all choices. Finally click the "Synchronize" button at the top.

ArgoCD sees that the cluster is empty and it will deploy your application in order to make the cluster have the same state as what is in Git

Ex 3
You can manage your Argo CD installations either from the Web Interface or using the Command Line.

Argo CD CLI
Step 1
Apart from the UI, ArgoCD also has a CLI. We have installed already the cli for you and authenticated against the instance.

Try the following commands

argocd app list
argocd app get demo
argocd app history demo
Let's delete the application and deploy it again but from the CLI this time.

First delete the app

argocd app delete demo
Confirm the deletion by answering yes in the terminal. The application will disappear from the Argo CD dashboard after some minutes.

Now deploy it again.

argocd app create demo2 \
--project default \
--repo https://github.com/codefresh-contrib/gitops-certification-examples \
--path "./simple-app" \
--dest-namespace default \
--dest-server https://kubernetes.default.svc
The application will appear in the ArgoCD dashboard.

Now sync it with

argocd app sync demo2
Finish
If you've viewed the dashboard, click Check to finish this track.