 GitOps Pros and Cons
GitOps is already proving a powerful standard for delivering software and is successfully being used by companies like Cern, Starbucks, Cisco, Deutsche Telekom, and many more. They’ve chosen GitOps because it helps them deliver better software faster.

As Kelsey Hightower said: “GitOps is the best thing since configuration as code. Git changed how we collaborate, but declarative configuration is the key to dealing with infrastructure at scale, and sets the stage for the next generation of management tools.”

We have talked about the common use cases of GitOps in the previous section. But why adopt GitOps in the first place? Put simply, it’s a better way to deliver software. While there are some cons, they are few when compared to the benefits.

Some Pros of GitOps:
Faster deployments
Safer deployments
Easier rollbacks
Straightforward auditing
Better traceability
Eliminating configuration drift

Adopting GitOps has enormous benefits but does pose some challenges. Many teams will have to adjust their culture and way of working to support using Git as the single source of truth. Strictly adhering to GitOps processes will mean all changes will be committed. This may present a challenge when it comes to debugging a live environment where operators are used to connecting and using a terminal to make changes on the fly. There may be times when that is necessary and will require suspending GitOps in some way.

Some other prerequisites for adopting GitOps include:
Good testing and CI already in place
A strategy for dealing with promotions between environments (something will cover in later certifications)
Secrets strategy

While some may view these items as barriers to adopting GitOps, they are all important and needed for a mature and successful software delivery program.
